;;; Commentary:

;;; Code:
(require 'package)
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "https://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.org/packages/")))
(package-initialize)

(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "/usr/local/bin/surf")

(require 'unicode-fonts)
(unicode-fonts-setup)

(tool-bar-mode -1)
(menu-bar-mode -1)
(show-paren-mode 1)
(ivy-mode 1)
(global-set-key (kbd "C-x C-b") 'ibuffer)
(server-start)
(bbdb-initialize)
(load-theme 'wombat t)

(set-face-attribute 'default nil :font  "Terminus-12")


(setq dired-listing-switches "-ahl")

(require 'emms-setup)
(require 'emms-info-libtag)
(emms-all)
(emms-default-players)
(emms-mode-line-enable)
(setq emms-stream-default-action "play")
(setq emms-info-functions '(emms-info-libtag))

(require 'slime)
(setq inferior-lisp-program "/usr/local/bin/sbcl")
(slime-setup '(slime-fancy))

(erc :server "127.0.0.1" :nick "pk")

(add-hook 'latex-mode-hook #'visual-line-mode)

(add-hook 'after-init-hook #'global-flycheck-mode)

(add-hook 'dired-mode-hook
	  (function (lambda ()
		      (define-key dired-mode-map (kbd "M-m") 'emms-play-dired))))

(require 'recentf)
(global-set-key (kbd "C-c r") 'recentf-open-files)


(add-hook 'haskell-mode-hook 'turn-on-haskell-indentation)
(add-hook 'haskell-mode-hook 'font-lock-mode)
(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(custom-set-variables '(haskell-tags-on-save t))
(add-hook 'haskell-mode-hook
          (lambda () (define-key haskell-mode-map (kbd "M-.") 'haskell-mode-jump-to-def-or-tag)))


;; own code
(defun pk/buffer-add-sentinel ()
  (interactive)
  (let ((buf (buffer-file-name)))
    (when buf
      (start-process-shell-command "entr-sentinel" "Entr"
                                   (concatenate 'string
                                                "echo "
                                                buf
                                                " | entr emacsclient -e \'(with-current-buffer \""
                                                (buffer-name)
                                                "\" (revert-buffer t t t))\'")))))

(make-variable-buffer-local
 (defvar pk/buffer-sentinel-entr-proc nil))

(define-minor-mode pk/buffer-sentinel-mode
  "Update buffer if underlying file changes"
  :lighter ""
  (if pk/buffer-sentinel-mode
      (setq pk/buffer-sentinel-entr-proc (pk/buffer-add-sentinel))
    (when (processp pk/buffer-sentinel-entr-proc) (delete-process pk/buffer-sentinel-entr-proc))))

(provide '.emacs)

;;; .emacs ends here
